<?php
/*
*	Sistema do blog
*
*/

class Comment { //estrutura para o item post do blog
	var $id = 0;
	var $postId = 0;
	var $userId = 0;
	var $text = 0;
	var $date = '';
	var $author = "?";
	var $e = false;
	
	function register() {
		// cria um registro vazio na tabela de posts
		// atribui o id desse registro à propriedade post
		$a = 1;
	}
	

	function open($id_comment) {
		global $tabela_comentarios;
		$q = new conexao();
		$q->solicitar("select * from $tabela_comentarios where Id = $id_comment");
		if(isset($q->itens[0])) {
			$a = $q->itens[0];
			$this->id = $a['Id'];
			$this->postId = $a['PostId'];
			$this->userId = $a['UserId'];
			$this->text = $a['Text'];
			$this->date = $a['Date'];
			$this->author = new Usuario();
			$this->author->openUsuario($this->userId);
		} else {
			$this->e = "Id informado não existe na tabela de comentarios";
		}
	}

	function save() {
		global $tabela_comentarios;
		$q = new conexao();
		if($this->id == 0) {
			$q->inserir($this->toDBArray(),$tabela_comentarios);
			$this->id = mysql_insert_id();
		} else
			$q->atualizar($this->id,$this->toDBArray(),$tabela_comentarios);
	}

	function toDBArray() {
		unset($dados);
		$dados['Id'] = $this->id;
		$dados['PostId'] = $this->postId;
		$dados['UserId'] = $this->userId;
		$dados['Text'] = $this->text;
		$dados['Date'] = $this->date;
		return($dados);
	}
	
	function Comment($id=0, $post_id="", $user_id="", $text="", $date=""){
		if($text != ""){
			$this->id = $id;
			$this->postId = $post_id;
			$this->userId = $user_id;
			$this->text = $text;
			$this->date = $date;
			$this->author = new Usuario();
			if($this->userId!="")
				$this->author->openUsuario($this->userId);
		}
	}

	function getId() {
		return $this->id;
	}

	function setId($id) {
		$this->id = $id;
	}

	function getText() {
		return $this->text;
	}

	function getDate($format="d/m/Y H:i:s") {
		if($format=="")
			$r = $this->date;
		else
			$r = date($format,strtotime($this->date));
		return $r;
	}

	function getAuthor() {
		return $this->author;	
	}
	
	function getUserId() { // Necessário pra deletar comments
		return $this->userId;
	}
}


class Post { //estrutura para o item post do blog
	var $id = 0;
	var $blogId = 0;
	var $userId = 0;
	var $title = '';
	var $text = 0;
	var $isPublic = false;
	var $date = '';
	var $comments = array();
	var $author = "?";
	var $e = "";
	var $tags = array();
	
	function register() {
		// cria um registro vazio na tabela de posts
		// atribui o id desse registro à propriedade post
		$a = 1;
	}
	

	function open($id_post) {
		global $tabela_posts;
		$q = new conexao();
		$q->solicitar("select * from $tabela_posts where Id = $id_post");
		if(isset($q->itens[0])) {
			$a = $q->itens[0]; // PORQUE MEU DEUS
			$this->id = $a['Id'];
			$this->blogId = $a['BlogId'];
			$this->userId = $a['UserId'];
			$this->title = $a['Title'];
			$this->text = $a['Text'];
			$this->isPublic = $a['IsPublic'];
			$this->date = $a['Date'];
			$this->author = new Usuario();
			$this->author->openUsuario($this->userId);
			$this->setComments();
		} else {
			$this->e = "Id informado não existe na tabela de posts";
		}
	}

	function save() {
		global $tabela_posts;
		$q = new conexao();
		if($this->id == 0) {
			$q->inserir($this->toDBArray(),$tabela_posts);
			$this->id = mysql_insert_id();
		} else {
			$q->atualizar($this->id,$this->toDBArray(),$tabela_posts);
		}
	}

	function toDBArray() {
		unset($dados);
		$dados['Id'] = $this->id;
		$dados['BlogId'] = $this->blogId;
		$dados['UserId'] = $this->userId;
		$dados['Title'] = $this->title;
		$dados['Text'] = $this->text;
		$dados['IsPublic'] = $this->isPublic;
		$dados['Date'] = $this->date;
		return($dados);
	}
	
	function Post($id=0, $blog_id="", $user_id="", $title="", $text="", $is_public=1, $date=""){
		$this->id = $id;
		$this->blogId = $blog_id;
		$this->userId = $user_id;
		$this->title = $title;
		$this->text = $text;
		$this->isPublic = $is_public;
		$this->date = $date;
		$this->author = new Usuario();
		if($this->userId!="")
			$this->author->openUsuario($this->userId);
	}

	function getTitle() {
		return $this->title;
	}

	function setTitle($title) {
		$this->title = $title;
	}

	function getId() {
		return $this->id;
	}

	function setId($id) {
		$this->id = $id;
	}

	function setComments() {
		global $tabela_comentarios;
		$q = new conexao();
		$q->solicitar("select * from $tabela_comentarios where PostId = $this->id ORDER BY Date DESC");
		if(sizeof($q->itens)>0)
			foreach($q->itens as $p)	
				$this->comments[] = new Comment($p['Id'], $p['PostId'], $p['UserId'], $p['Text'], $p['Date']);
	}

	function getText() {
		return $this->text;
	}

	function getDate($format="d/m/Y H:i:s") {
		if($format=="")
			$r = $this->date;
		else
			$r = date($format,strtotime($this->date));
		return $r;
	}

	function getAuthor() {
		return $this->author;	
	}
	
	function getIsPublic() {
		return $this->isPublic;	
	}
	
	
	// Funções abaixo disso made by João
	function getPostTags($post=0, $edicao=0) { // Isso pega as tags do BD e deixa elas em um array.
		global $tabela_tags;
		$consulta = new conexao();
		if ($post == 0) {
			$consulta->solicitar("SELECT Tags FROM $tabela_tags WHERE Id = ".$this->getId());
			if (isset($consulta->resultado['Tags'])){
				$this->tags = explode(';', $consulta->resultado['Tags']); // Passa pra um array.
			} else {
				if ($edicao == 0)
					$this->tags[] = "Postagem sem tags";
				else
					$this->tags[] = "";
			}
		} else {
			$consulta->solicitar("SELECT Tags FROM $tabela_tags WHERE Id = $post");
			if (isset($consulta->resultado['Tags'])){
				$this->tags = explode(';', $consulta->resultado['Tags']); // Passa pra um array.
			} else {
				if ($edicao == 0)
					$this->tags[] = "Postagem sem tags";
				else
					$this->tags[] = "";
			}
		}
	}
	
	function printPostTags() {
		$tags = "";
		for ($i=0,$size=count($this->tags); $i<$size; $i++){
			if (isset($this->tags[$i+1])) { // Se não for o ultimo...
				$tags .= ucfirst($this->tags[$i]).", ";
			} else {
				$tags .= ucfirst($this->tags[$i]);
			}
		}
		return $tags;
	}
}



class Blog {
	var $id = 0;
	var $title = "";
	var $ownersIds = array();
	var $tipo = 0;
	var $posts = array();
	var $size = 0;
	var $owners = array();
	var $paginacao = 0;
	var $num_paginas = 0;
	var $existe = 0;
	var $tags = array();
	
	function Blog($id) {
		global $tabela_blogs;
		if($id==0) {
			$this->setId(0);
			$this->setOwnersIds(array($_SESSION['SS_usuario_id']));
			$this->setTitle('Meu blog');
			$this->setTipo(1);
			$q = new conexao();
			$q->inserir($this->toDBArray(),$tabela_blogs);
			$this->setId(mysql_insert_id());
		}
		
		$consulta = new conexao();
		$consulta->solicitar("SELECT * FROM $tabela_blogs WHERE Id = '$id'");
		if(!$consulta->itens)
			$this->setExiste(0);
		else
			$this->setExiste(1);
		$q = $consulta;		// PRA QUÊ MUDAR O NOME DA VARIÁVEL?
		$this->setId($id);
		$this->setTitle($q->itens[0]['Title']);
		$this->setOwnersIds(explode(';',$q->itens[0]['OwnersIds']));
		$this->setOwners();
		$this->setTipo($q->itens[0]['Tipo']);
		$this->setPosts();
		$this->setSize(sizeof($this->posts));
		$this->setPaginacao(6);
		$this->setNumPaginas();
		$this->setBlogTags($id);
	}

	function toDBArray() {
		unset($dados);
		$dados['Id'] = $this->id;
		$dados['OwnersIds'] = implode(';',$this->getOwnersIds());
		$dados['Title'] = $this->getTitle();
		$dados['Tipo'] = $this->getTipo();
		return($dados);
	}

	function setExiste($existe) {
		$this->existe = $existe;
	}

	function setId($id) {
		$this->id = $id;
	}

	function setTitle($title) {
		$this->title = $title;
	}

	function setTipo($tipo) {
		$this->tipo = $tipo;
	}

	function setOwnersIds($owners_ids) {
		$this->ownersIds = $owners_ids;

	}

	function setOwners() {
		foreach($this->ownersIds as $owner_id) {
			$id = (int)$owner_id;
			$aux_owner = new Usuario();
			$aux_owner->openUsuario($id);
			$this->owners[] = $aux_owner;
		}
	}
	
	function setPosts() {
		global $tabela_posts;
		
		//echo($tabela_blogs . "  " . $id . "  " . $BD_host1."  ".$BD_base1."  ".$BD_user1."  ".$BD_pass1);
		$consulta = new conexao();
		$consulta->solicitar("select * from $tabela_posts where BlogId = $this->id ORDER BY Id DESC"); // Ordenando por ID, pra ficar na ordem de criação.
		/*foreach($consulta->itens as $p) // Does not work, larga warning e não itera por ter um só ou 0 resultados.
			$this->posts[] = new Post($p['Id'], $p['BlogId'], $p['UserId'], $p['Title'], $p['Text'], $p['IsPublic'], $p['Date']);*/
		for($i=0 ; $i<count($consulta->itens);$i++) { // Isso funciona pra 0 resultados. I hope.
			$this->posts[] = new Post($consulta->resultado['Id'], $consulta->resultado['BlogId'], $consulta->resultado['UserId'], $consulta->resultado['Title'], $consulta->resultado['Text'], $consulta->resultado['IsPublic'], $consulta->resultado['Date']);
			$consulta->proximo();
		}
	}

	function setSize($size) {
		$this->size = $size;
	}

	function setPaginacao($paginacao) {
		$this->paginacao = $paginacao;
	}

	function setNumPaginas() {
		$this->num_paginas = ceil($this->getSize()/$this->paginacao);	
	}

	function getTipo() {
		return $this->tipo;
	}

	function getOwnersIds() {
		return $this->ownersIds;
	}

	function getExiste() {
		return $this->existe;
	}

	function getId() {
		return $this->id;
	}

	function getTitle() {
		return $this->title;
	}

	function getSize() {
		return $this->size;
	}

	function getOwners() {
		return $this->owners;
	}

	function getPaginacao() {
		return $this->paginacao;	
	}

	function getNumPaginas() {
		return $this->num_paginas;	
	}

	function mostraPaginacao($post_ini) {
		if($post_ini>0) {
			echo "<a href=\"blog.php?blog_id=$this->id&ini=0\"><< Primeira</a>";
			echo "<a href=\"blog.php?blog_id=$this->id&ini=". ($post_ini-$this->getPaginacao()) ."\">< Anterior</a>";
		} else {
			echo "<span><< Primeira</span>";
			echo "<span>< Anterior</span>";
		}

		for($i=1;$i<=$this->getNumPaginas();$i++) { 
			if($post_ini==($i-1)*$this->getPaginacao()) {
				echo "<span class=\"numero_atual\">$i</span>";
			} else {
				echo "<a href=\"blog.php?blog_id=$this->id&ini=".($i-1)*$this->getPaginacao()."\" class=\"numero\">$i</a>";
			}
		}
		
		if($post_ini<($this->getNumPaginas()-1)*$this->getPaginacao()) {
			echo "<a href=\"blog.php?blog_id=$this->id&ini=" .($post_ini+$this->getPaginacao()) . "\">Pr&oacute;xima ></a>";
			echo "<a href=\"blog.php?blog_id=$this->id&ini=".($this->getNumPaginas()-1)*$this->getPaginacao()."\">&Uacute;ltima >></a>";
		} else {
			echo "<span>Pr&oacute;xima ></span>";
			echo "<span>&Uacute;ltima >></span>";
		}
	}
	
	function setBlogTags($blog) { // Isso pega todas as tags usadas no blog. Made by João
		global $tabela_tags;
		$consulta = new conexao();
		$consulta->solicitar("SELECT Tags FROM $tabela_tags where BlogId = $blog");
		if (isset($consulta->resultado['Tags'])){
			$tamanho_lista = count($consulta->itens);
			for ($i=0; $i < $tamanho_lista; $i++){
				$this->tags = array_merge($this->tags, explode(';', $consulta->resultado['Tags'])); // Passa pra um array.
				$consulta->proximo();
			}
			$this->tags = array_unique($this->tags); // Remove todas as repetidas.
			sort($this->tags); // Tem que fazer sort depois de separar as tags, devido ao jeito que são storadas.
		} else {
			$this->tags[] = "Blog sem tags";
		}
	}
}

class lista_posts{
	var $lista = array();
	var $tamanho_lista = 0;
	
	function lista_posts($id, $tabela){
		return __construct($id, $tabela); // Caso os caras estejam usando PHP 5.2 ou alguma coisa assim, isso dá backwards compatibility
	}
	
	function __construct($id, $tabela_posts){
		$consulta = new conexao();
		$this->lista = array();
		$lista_interna = array();
		
		$consulta->solicitar("SELECT Id, Title, Date FROM $tabela_posts WHERE (BlogId=$id AND IsPublic = 1) ORDER BY Date DESC"); // Pega só os posts publicos.
		
		$this->tamanho_lista = count($consulta->itens); // Seta o valor pro for ali embaixo
		
		$ano_atual = 9999999; // I do believe this code will last more than humanity in a working status.
		$mes_atual = 13;
		
		for ($i=0; $i < $this->tamanho_lista; $i++){
			$elemento['ano'] = substr($consulta->resultado['Date'], 0, 4); // Pega os 4 chars do ano.
			$elemento['mes'] = substr($consulta->resultado['Date'], 5, 2); // See above
			$elemento['titulo'] = $consulta->resultado['Title'];
			$elemento['post_id'] = $consulta->resultado['Id'];
			
			if ($elemento['ano'] != $ano_atual) {
				if ($ano_atual != 9999999){
					$lista_interna[] = "\nend_month"; // pusha as coisas
					$lista_interna[] = "\nend_year"; // se não é o ano inicial, acaba o anterior
				}
				$ano_atual = $elemento['ano'];
				$lista_interna[] = "\nnew_year";
				$lista_interna[] = $elemento['ano'];
				$mes_atual = 13;
			}
			
			
			
			if ($elemento['mes'] < $mes_atual) {
				if ($mes_atual != 13){
					if ($lista_interna[$i-1] == "\nend_year"){ // NÃO PEÇA. FUNCIONA. DÁ UM PRINT_R PRA VER.
						$lista_interna[] = "\nend_year";
						$lista_interna[$i-1] = "\nend_month";
					} else {
						$lista_interna[] = "\nend_month"; // se não é o mes inicial, acaba o anterior
					}
				}
				$lista_interna[] = "\nnew_month";
				$lista_interna[] = $elemento['mes'];
				$mes_atual = $elemento['mes'];
			}
			
			$lista_interna[] = $elemento['titulo'] ."\n". $elemento['post_id']; // O título SEMPRE vai estar lá.
				// Esse \n aí serve pra separar, já que teoricamente o usuario não conseguiria enviar um \n via input.
				// Sem falar que tem um str_replace que tira \n do título dos posts. Pra GARANTIR GARANTIDO. ~ João, 01 set. 2011
			
			$consulta->proximo();
		}
		$this->lista = $lista_interna;
		$this->tamanho_lista = count($lista_interna); // Seta o valor pra ser utilizado fora do construtor.
	}
}

function getMonth($number){ // usada no blog.php
	switch ($number){
		case 1:
			return "Janeiro";
			break;
		case 2:
			return "Fevereiro";
			break; // Esses breaks tão aí pra garantir a pegada.
		case 3:
			return "Março";
			break;
		case 4:
			return "Abril";
			break;
		case 5:
			return "Maio";
			break;
		case 6: 
			return "Junho";
			break;
		case 7:
			return "Julho";
			break;
		case 8:
			return "Agosto";
			break;
		case 9:
			return "Setembro";
			break;
		case 10:
			return "Outubro";
			break;
		case 11:
			return "Novembro";
			break;
		case 12:
			return "Dezembro";
			break;
	}
	return "Alguma coisa deu muito errado no blog.class.php. Avise um desenvolvedor disso.";
}

function numeroMensagens($num){ // Usada em listas de blogs
	if ($num == 1)
		return "Uma mensagem";
	else
		return $num." mensagens";
}

function getTextSample($blog_id){ // Vide comentário acima.
	global $tabela_posts;
	$b = new conexao();
	$b->solicitar("SELECT Text FROM $tabela_posts WHERE BlogId = $blog_id ORDER BY Date DESC");
	
	$texto = $b->resultado['Text'];
	
	if (strlen($texto) > 500) {
		/*$texto = substr($texto, 0, 500); // Pega no max 500 caracteres.
		$pos = strrpos($texto, " "); // Acha a posição do ultimo espaço.
		$texto = substr($texto, 0, $pos); // Remove o que tem depois do espaço.
		$texto .= "..."; // Pra deixar bonitinho*/
		
		$texto=substr(substr($texto,0,500),0,strrpos(substr($texto,0,500)," "))."..."; // Mesma coisa da de cima.
	}
	return $texto;
}

function getPrintableOwners($blog_id){
	global $tabela_blogs;
	global $tabela_usuarios;
	$b = new conexao(); // Para os ids dos donos
	$nome = new conexao(); // Para cada nome.
	$nomes = array(); // Para todos os nomes juntos
	$zona = ""; // Onde rola a putaria.
	
	$b->solicitar("SELECT OwnersIds FROM $tabela_blogs WHERE Id = $blog_id");
	$donos = explode(';', $b->resultado['OwnersIds']); // Passa pra um array
	
	foreach($donos as $dono){
		if ($dono != false) { // if ($dono == IDValido), acredite, é necessário.
			$nome->solicitar("SELECT usuario_nome FROM $tabela_usuarios WHERE usuario_id = $dono");
			$nomes[] = $nome->resultado['usuario_nome'];
		}
	}
	
	// Todos os nomes foram pegos. Agora se gera o texto bunitim
	
	for ($nossa_a_cami_ta_gostosa_hoje=0,$size=count($nomes); $nossa_a_cami_ta_gostosa_hoje<$size; $nossa_a_cami_ta_gostosa_hoje++){
		if (isset($nomes[$nossa_a_cami_ta_gostosa_hoje+1])) { // Se não for o ultimo...
			$zona .= $nomes[$nossa_a_cami_ta_gostosa_hoje].", "; // Tem virgula.
		} else {
			$zona .= $nomes[$nossa_a_cami_ta_gostosa_hoje];
		}
	}
	
	return $zona;
}
?>
